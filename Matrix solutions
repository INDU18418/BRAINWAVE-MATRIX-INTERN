import tkinter as tk
from tkinter import messagebox, ttk

# ----- Authentication -----
USERS = {'admin': 'admin123'}

# ----- Inventory Storage (in-memory) -----
inventory = {}

# ----- Core Functions -----
def login():
    user = username_entry.get()
    pwd = password_entry.get()
    if user in USERS and USERS[user] == pwd:
        login_window.destroy()
        open_main_window()
    else:
        messagebox.showerror("Login Failed", "Invalid username or password")

def add_product():
    pid = pid_entry.get()
    name = name_entry.get()
    try:
        qty = int(qty_entry.get())
    except ValueError:
        messagebox.showerror("Invalid Input", "Quantity must be an integer")
        return

    if not pid or not name:
        messagebox.showerror("Input Error", "Product ID and Name are required")
        return

    inventory[pid] = {'name': name, 'qty': qty}
    refresh_tree()

def edit_product():
    pid = pid_entry.get()
    if pid in inventory:
        inventory[pid]['name'] = name_entry.get()
        try:
            inventory[pid]['qty'] = int(qty_entry.get())
        except ValueError:
            messagebox.showerror("Invalid Input", "Quantity must be an integer")
            return
        refresh_tree()
    else:
        messagebox.showerror("Not Found", "Product ID not found")

def delete_product():
    pid = pid_entry.get()
    if pid in inventory:
        del inventory[pid]
        refresh_tree()
    else:
        messagebox.showerror("Not Found", "Product ID not found")

def refresh_tree():
    for row in tree.get_children():
        tree.delete(row)
    for pid, details in inventory.items():
        tree.insert('', 'end', values=(pid, details['name'], details['qty']))

def show_low_stock():
    low_stock = [f"{pid}: {d['name']} (Qty: {d['qty']})" for pid, d in inventory.items() if d['qty'] < 5]
    message = "\n".join(low_stock) if low_stock else "All items are sufficiently stocked."
    messagebox.showinfo("Low Stock Report", message)

# ----- GUI Windows -----
def open_main_window():
    global pid_entry, name_entry, qty_entry, tree
    main = tk.Tk()
    main.title("Inventory Management System")
    main.geometry("700x400")

    tk.Label(main, text="Product ID").grid(row=0, column=0)
    pid_entry = tk.Entry(main)
    pid_entry.grid(row=0, column=1)

    tk.Label(main, text="Product Name").grid(row=1, column=0)
    name_entry = tk.Entry(main)
    name_entry.grid(row=1, column=1)

    tk.Label(main, text="Quantity").grid(row=2, column=0)
    qty_entry = tk.Entry(main)
    qty_entry.grid(row=2, column=1)

    tk.Button(main, text="Add", command=add_product).grid(row=3, column=0)
    tk.Button(main, text="Edit", command=edit_product).grid(row=3, column=1)
    tk.Button(main, text="Delete", command=delete_product).grid(row=3, column=2)
    tk.Button(main, text="Low Stock Report", command=show_low_stock).grid(row=4, column=1)

    tree = ttk.Treeview(main, columns=('ID', 'Name', 'Quantity'), show='headings')
    tree.heading('ID', text='Product ID')
    tree.heading('Name', text='Product Name')
    tree.heading('Quantity', text='Quantity')
    tree.grid(row=5, column=0, columnspan=3, pady=10)

    main.mainloop()

# ----- Login Window -----
login_window = tk.Tk()
login_window.title("Login")
login_window.geometry("300x150")

username_entry = tk.Entry(login_window)
password_entry = tk.Entry(login_window, show='*')

tk.Label(login_window, text="Username").pack()
username_entry.pack()

tk.Label(login_window, text="Password").pack()
password_entry.pack()

tk.Button(login_window, text="Login", command=login).pack(pady=10)

login_window.mainloop()
